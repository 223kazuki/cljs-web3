(ns cljs-web3.async.eth
  (:refer-clojure :exclude [filter])
  (:require
   [cljs-web3.eth :as web3-eth]
   [cljs-web3.utils :as u]))

(def get-protocol-version (u/create-async-fn web3-eth/get-protocol-version))
(def syncing? (u/create-async-fn web3-eth/syncing?))
(def get-coinbase (u/create-async-fn web3-eth/get-coinbase))
(def mining? (u/create-async-fn web3-eth/mining?))
(def get-hashrate (u/create-async-fn web3-eth/get-hashrate))
(def get-gas-price (u/create-async-fn web3-eth/get-gas-price))
(def get-accounts (u/create-async-fn web3-eth/get-accounts))
(def get-block-number (u/create-async-fn web3-eth/get-block-number))
(def get-balance (u/create-async-fn web3-eth/get-balance))
(def get-storage-at (u/create-async-fn web3-eth/get-storage-at))
(def get-code (u/create-async-fn web3-eth/get-code))
(def get-block (u/create-async-fn web3-eth/get-block))
(def get-block-transaction-count (u/create-async-fn web3-eth/get-block-transaction-count))
(def get-uncle (u/create-async-fn web3-eth/get-uncle))
(def get-transaction (u/create-async-fn web3-eth/get-transaction))
(def get-transaction-from-block (u/create-async-fn web3-eth/get-transaction-from-block))
(def get-transaction-receipt (u/create-async-fn web3-eth/get-transaction-receipt))
(def get-transaction-count (u/create-async-fn web3-eth/get-transaction-count))
(def send-transaction! (u/create-async-fn web3-eth/send-transaction!))
(def send-signed-transaction! (u/create-async-fn web3-eth/send-signed-transaction!))
(def sign (u/create-async-fn web3-eth/sign))
(def sign-transaction (u/create-async-fn web3-eth/sign-transaction))
(def call! (u/create-async-fn web3-eth/call!))
(def estimate-gas (u/create-async-fn web3-eth/estimate-gas))
(def get-past-logs (u/create-async-fn web3-eth/get-past-logs))
(def get-work (u/create-async-fn web3-eth/get-work))
(def submit-work! (u/create-async-fn web3-eth/submit-work!))
